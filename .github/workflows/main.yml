name: Docker镜像在线打包成离线包

on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写 Docker 镜像名称 (多个用英文逗号分开)'
        required: true
        default: 'nginx:latest'

jobs:
  pull_and_package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Create builder and use it
      run: |
        docker buildx create --use

    - name: Install QEMU for multi-arch support
      uses: docker/setup-qemu-action@v2

    - name: Clean up Docker to free space
      run: |
        docker system prune -a -f
        docker volume prune -f

    - name: Pull and Save Multi-Arch Docker Images
      run: |
        images="${{ github.event.inputs.docker_images }}"
        IFS=',' read -r -a image_array <<< "$images"
        for image in "${image_array[@]}"; do
          # 直接拉取镜像并保存
          image_name="${image##*/}"
          docker pull "${image}"  # 拉取指定镜像
          docker save "${image}" -o "${image_name//\//_}.tar"  # 保存为 .tar 文件
        done

    - name: Compress the TAR files
      run: tar -czf multi-arch-images.tar.gz *.tar

    - name: Get current date for versioning
      id: versioning
      run: echo "RELEASE_TAG=$(date +'%Y%m%d')" >> $GITHUB_ENV

    - name: Upload artifact to GitHub Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: multi-arch-images.tar.gz
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.RELEASE_TAG }}  # 使用当前日期作为tag
        releaseName: "Multi-Arch Docker Images"
        body: "These are the saved multi-architecture Docker images."
        draft: false
        prerelease: false

    - name: Clean up intermediate files
      run: |
        rm *.tar
